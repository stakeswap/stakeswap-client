/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Pair, PairInterface } from "../Pair";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
    ],
    name: "onStake",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolETHAmount",
        type: "uint256",
      },
    ],
    name: "onUnstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedWETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600e5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612c09806101086000396000f3fe608060405234801561001057600080fd5b50600436106102f15760003560e01c806389a302711161019d578063c514abf3116100e9578063d505accf116100a2578063ebdfda5e1161007c578063ebdfda5e1461066a578063f2cd3a1214610672578063f781b24e1461067a578063fff6cae91461068257600080fd5b8063d505accf14610624578063dd62ed3e14610637578063e0bab4c41461066257600080fd5b8063c514abf3146105f0578063c9ac8c8e146105f9578063ca8aa0e414610601578063cbc74de7146102f6578063ce06961414610609578063d21220a71461061157600080fd5b8063ad5c464811610156578063be78e8d911610130578063be78e8d9146104a6578063c0c53b8b146105c2578063c1fe3e48146105d5578063c45a0155146105dd57600080fd5b8063ad5c46481461059e578063ba9a7a56146105a6578063bc25cf77146105af57600080fd5b806389a302711461051b57806389afcb441461052357806395d89b411461054b5780639efed7c114610570578063a9059cbb14610583578063aa6430c61461059657600080fd5b8063393127a11161025c5780635a33bbbe116102155780636a627842116101ef5780636a627842146104bf57806370a08231146104d25780637464fc3d146104f25780637ecebe00146104fb57600080fd5b80635a33bbbe146104a65780635a3d5493146104ae578063698e0796146104b757600080fd5b8063393127a11461045f5780634aa07e64146104725780634bc0dcb61461047a5780634cf088d914610482578063565d3e6e146104955780635909c0d51461049d57600080fd5b806318160ddd116102ae57806318160ddd146103e357806323b872dd146103fa57806323c34a641461040d57806330adf81f14610415578063313ce5671461043c5780633644e5151461045657600080fd5b8063020b627d146102f6578063022c0d9f1461031657806306fdde031461032b5780630902f1ac14610361578063095ea7b3146103955780630dfe1681146103b8575b600080fd5b6102fe61068a565b604051600f9190910b81526020015b60405180910390f35b610329610324366004612737565b6106da565b005b6103546040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b60405161030d91906127f1565b610369610bd7565b604080516001600160701b03948516815293909216602084015263ffffffff169082015260600161030d565b6103a86103a3366004612824565b610c01565b604051901515815260200161030d565b6007546103cb906001600160a01b031681565b6040516001600160a01b03909116815260200161030d565b6103ec60005481565b60405190815260200161030d565b6103a8610408366004612850565b610c18565b6103ec610cac565b6103ec7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610444601281565b60405160ff909116815260200161030d565b6103ec60035481565b6103ec61046d366004612891565b610cdb565b6103cb610f9f565b6103cb610fe3565b6006546103cb906001600160a01b031681565b6103cb611006565b6103ec600b5481565b6102fe61104a565b6103ec600c5481565b6103cb61105a565b6103ec6104cd3660046128aa565b61107d565b6103ec6104e03660046128aa565b60016020526000908152604090205481565b6103ec600d5481565b6103ec6105093660046128aa565b60046020526000908152604090205481565b6103cb611345565b6105366105313660046128aa565b611389565b6040805192835260208301919091520161030d565b610354604051806040016040528060068152602001652aa72496ab1960d11b81525081565b61032961057e366004612891565b6116ef565b6103a8610591366004612824565b6117a9565b6103cb6117b6565b6103cb6117d9565b6103ec6103e881565b6103296105bd3660046128aa565b61181d565b6103296105d03660046128c7565b611931565b6103cb6119c1565b6005546103cb906001600160a01b031681565b6103ec600a5481565b6103cb611a05565b6103cb611a28565b6103cb611a6c565b6008546103cb906001600160a01b031681565b610329610632366004612912565b611ab0565b6103ec610645366004612989565b600260209081526000928352604080842090915290825290205481565b6103cb611cc4565b6103cb611d08565b6103ec611d4c565b6103cb611d7b565b610329611d9e565b60004660010361069a5750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b600e546001146106fc5760405162461bcd60e51b81526004016106d1906129c2565b6000600e558415158061070f5750600084115b6107695760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b60648201526084016106d1565b600080610774610bd7565b5091509150816001600160701b0316871080156107995750806001600160701b031686105b6107ef5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b60648201526084016106d1565b60075460085460009182916001600160a01b0391821691908116908916821480159061082d5750806001600160a01b0316896001600160a01b031614155b6108715760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b60448201526064016106d1565b8a1561088257610882828a8d611ec2565b891561089357610893818a8c611ec2565b8615610900576040516304347a1760e21b81526001600160a01b038a16906310d1e85c906108cd9033908f908f908e908e906004016129ed565b600060405180830381600087803b1580156108e757600080fd5b505af11580156108fb573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109689190612a39565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa1580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190612a39565b92505050600089856001600160701b03166109ee9190612a68565b83116109fb576000610a18565b610a0e8a6001600160701b038716612a68565b610a189084612a68565b90506000610a2f8a6001600160701b038716612a68565b8311610a3c576000610a59565b610a4f8a6001600160701b038716612a68565b610a599084612a68565b90506000821180610a6a5750600081115b610ac25760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b60648201526084016106d1565b6000610ae4610ad284600361200d565b610ade876103e861200d565b90612074565b90506000610af6610ad284600361200d565b9050610b1b620f4240610b156001600160701b038b8116908b1661200d565b9061200d565b610b25838361200d565b1015610b625760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b60448201526064016106d1565b5050610b70848488886120ca565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600e55505050505050505050565b6009546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610c0e3384846122b6565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610c97576001600160a01b0384166000908152600260209081526040808320338452909152902054610c729083612074565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610ca2848484612318565b5060019392505050565b60004660010361069a57507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b6006546000906001600160a01b03163314610d225760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b60448201526064016106d1565b6000610d2c6117d9565b6007546001600160a01b0390811691161490506000610d496117d9565b6008546001600160a01b0390811691161490508180610d655750805b610da05760405162461bcd60e51b815260206004820152600c60248201526b24a72b20a624a22fa820a4a960a11b60448201526064016106d1565b600082610db8576008546001600160a01b0316610dc5565b6007546001600160a01b03165b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2f9190612a39565b90506000600a5482610e419190612a7b565b905060646000548783610e549190612a8e565b610e5e9190612abb565b610e69906032612a8e565b610e739190612abb565b94508482118015610ea25750610e898583612a68565b6064610e96836032612a8e565b610ea09190612abb565b115b610edc5760405162461bcd60e51b815260206004820152600b60248201526a13d5915497d4d51052d15160aa1b60448201526064016106d1565b84600a6000828254610eee9190612a7b565b90915550610efc90506117d9565b6001600160a01b0316632e1a7d4d866040518263ffffffff1660e01b8152600401610f2991815260200190565b600060405180830381600087803b158015610f4357600080fd5b505af1158015610f57573d6000803e3d6000fd5b50506006546040516001600160a01b03909116925087156108fc02915087906000818181858888f19350505050158015610f95573d6000803e3d6000fd5b5050505050919050565b600046600103610fc25750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b4660050361069a5750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60004660010361069a575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b6000466001036110295750735e8422345238f34275888049021821e8e08caa1f90565b4660050361069a5750733e04888b1c07a9805861c19551f7ed53145bd8d490565b60004660010361069a5750600090565b60004660010361069a57507306325440d014e39736583c165c2963ba99faf14e90565b6000600e546001146110a15760405162461bcd60e51b81526004016106d1906129c2565b6000600e819055806110b1610bd7565b506007546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611103573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111279190612a39565b6008546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611175573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111999190612a39565b905060006111b0836001600160701b038716612074565b905060006111c7836001600160701b038716612074565b905060006111d587876123be565b6000805491925081900361120f576111fb6103e8610ade6111f6878761200d565b6124fb565b985061120a60006103e861256b565b611256565b6112536001600160701b038916611226868461200d565b6112309190612abb565b6001600160701b038916611244868561200d565b61124e9190612abb565b6125fa565b98505b600089116112b75760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b60648201526084016106d1565b6112c18a8a61256b565b6112cd86868a8a6120ca565b81156112f7576009546112f3906001600160701b0380821691600160701b90041661200d565b600d555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600e5550949695505050505050565b600046600103611368575073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b4660050361069a5750732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b600080600e546001146113ae5760405162461bcd60e51b81526004016106d1906129c2565b6000600e819055806113be610bd7565b506007546008546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015611418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143c9190612a39565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015611486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114aa9190612a39565b306000908152600160205260408120549192506114c788886123be565b600054909150806114d8848761200d565b6114e29190612abb565b9a50806114ef848661200d565b6114f99190612abb565b995060008b11801561150b575060008a115b6115685760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b60648201526084016106d1565b6115723084612612565b61157d878d8d611ec2565b611588868d8c611ec2565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa1580156115cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f09190612a39565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa158015611637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165b9190612a39565b935061166985858b8b6120ca565b81156116935760095461168f906001600160701b0380821691600160701b90041661200d565b600d555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600e81905550915091565b6006546001600160a01b031633146117335760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b60448201526064016106d1565b80600a60008282546117459190612a68565b9091555061175390506117d9565b6001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561178d57600080fd5b505af11580156117a1573d6000803e3d6000fd5b505050505050565b6000610c0e338484612318565b60004660010361069a575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b6000466001036117fc575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b4660050361069a575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b600e5460011461183f5760405162461bcd60e51b81526004016106d1906129c2565b6000600e556007546008546009546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916118da91849186916118d5916001600160701b039091169084906370a08231906024015b602060405180830381865afa1580156118b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190612a39565b611ec2565b6009546040516370a0823160e01b815230600482015261192791839186916118d591600160701b9091046001600160701b0316906001600160a01b038516906370a0823190602401611894565b50506001600e5550565b6005546001600160a01b031633146119825760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064016106d1565b600780546001600160a01b039485166001600160a01b031991821617909155600880549385169382169390931790925560068054919093169116179055565b6000466001036119e4575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b4660050361069a5750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600046600103611029575073ac3e018457b222d93114458476f3e3416abbe38f90565b600046600103611a4b575073ae78736cd615f374d3085123a210448e74fc639390565b4660050361069a575073ae78736cd615f374d3085123a210448e74fc639390565b600046600103611a8f575073ba12222222228d8ba445958a75a0704d566bf2c890565b4660050361069a575073ba12222222228d8ba445958a75a0704d566bf2c890565b42841015611af55760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b60448201526064016106d1565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611b4883612acf565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611bc192919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611c2c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590611c625750886001600160a01b0316816001600160a01b0316145b611cae5760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e41545552450000000060448201526064016106d1565b611cb98989896122b6565b505050505050505050565b600046600103611ce75750736b175474e89094c44da98b954eedeac495271d0f90565b4660050361069a57507373967c6a0904aa032c103b4104747e88c566b1a290565b600046600103611d2b575073bafa44efe7901e04e39dad13167d089c559c113890565b4660050361069a5750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b60004660010361069a57507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b60004660010361069a575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b600e54600114611dc05760405162461bcd60e51b81526004016106d1906129c2565b6000600e556007546040516370a0823160e01b8152306004820152611ebb916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e339190612a39565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9f9190612a39565b6009546001600160701b0380821691600160701b9004166120ca565b6001600e55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b17905291516000928392871691611f4e9190612ae8565b6000604051808303816000865af19150503d8060008114611f8b576040519150601f19603f3d011682016040523d82523d6000602084013e611f90565b606091505b5091509150818015611fba575080511580611fba575080806020019051810190611fba9190612b04565b6120065760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c454400000000000060448201526064016106d1565b5050505050565b6000811580612031575082826120238183612a8e565b925061202f9083612abb565b145b610c125760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b60448201526064016106d1565b6000826120818382612a68565b9150811115610c125760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b60448201526064016106d1565b6001600160701b0384118015906120e857506001600160701b038311155b61212a5760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b60448201526064016106d1565b600061213b64010000000042612b26565b60095490915060009061215b90600160e01b900463ffffffff1683612b3a565b905060008163ffffffff1611801561217b57506001600160701b03841615155b801561218f57506001600160701b03831615155b1561221e578063ffffffff166121b7856121a88661269c565b6001600160e01b0316906126b5565b6001600160e01b03166121ca9190612a8e565b600b60008282546121db9190612a7b565b909155505063ffffffff81166121f4846121a88761269c565b6001600160e01b03166122079190612a8e565b600c60008282546122189190612a7b565b90915550505b6009805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604090205461233b9082612074565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461236a90826126ca565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061230b9085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124389190612b5e565b600d546001600160a01b0382161580159450919250906124e75780156124e25760006124736111f66001600160701b0388811690881661200d565b90506000612480836124fb565b9050808211156124df5760006124a26124998484612074565b6000549061200d565b905060006124bb836124b586600561200d565b906126ca565b905060006124c98284612abb565b905080156124db576124db878261256b565b5050505b50505b6124f3565b80156124f3576000600d555b505092915050565b6000600382111561255c5750806000612515600283612abb565b612520906001612a7b565b90505b818110156125565790508060028161253b8186612abb565b6125459190612a7b565b61254f9190612abb565b9050612523565b50919050565b8115612566575060015b919050565b60005461257890826126ca565b60009081556001600160a01b03831681526001602052604090205461259d90826126ca565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906125ee9085815260200190565b60405180910390a35050565b6000818310612609578161260b565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546126359082612074565b6001600160a01b0383166000908152600160205260408120919091555461265c9082612074565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016125ee565b6000610c12600160701b6001600160701b038416612b7b565b600061260b6001600160701b03831684612bad565b6000826126d78382612a7b565b9150811015610c125760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b60448201526064016106d1565b6001600160a01b038116811461273457600080fd5b50565b60008060008060006080868803121561274f57600080fd5b853594506020860135935060408601356127688161271f565b9250606086013567ffffffffffffffff8082111561278557600080fd5b818801915088601f83011261279957600080fd5b8135818111156127a857600080fd5b8960208285010111156127ba57600080fd5b9699959850939650602001949392505050565b60005b838110156127e85781810151838201526020016127d0565b50506000910152565b60208152600082518060208401526128108160408501602087016127cd565b601f01601f19169190910160400192915050565b6000806040838503121561283757600080fd5b82356128428161271f565b946020939093013593505050565b60008060006060848603121561286557600080fd5b83356128708161271f565b925060208401356128808161271f565b929592945050506040919091013590565b6000602082840312156128a357600080fd5b5035919050565b6000602082840312156128bc57600080fd5b813561260b8161271f565b6000806000606084860312156128dc57600080fd5b83356128e78161271f565b925060208401356128f78161271f565b915060408401356129078161271f565b809150509250925092565b600080600080600080600060e0888a03121561292d57600080fd5b87356129388161271f565b965060208801356129488161271f565b95506040880135945060608801359350608088013560ff8116811461296c57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561299c57600080fd5b82356129a78161271f565b915060208301356129b78161271f565b809150509250929050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215612a4b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c1257610c12612a52565b80820180821115610c1257610c12612a52565b8082028115828204841417610c1257610c12612a52565b634e487b7160e01b600052601260045260246000fd5b600082612aca57612aca612aa5565b500490565b600060018201612ae157612ae1612a52565b5060010190565b60008251612afa8184602087016127cd565b9190910192915050565b600060208284031215612b1657600080fd5b8151801515811461260b57600080fd5b600082612b3557612b35612aa5565b500690565b63ffffffff828116828216039080821115612b5757612b57612a52565b5092915050565b600060208284031215612b7057600080fd5b815161260b8161271f565b6001600160e01b03828116828216818102831692918115828504821417612ba457612ba4612a52565b50505092915050565b60006001600160e01b0383811680612bc757612bc7612aa5565b9216919091049291505056fea264697066735822122045eb6709387868547e3e0321244d9cd6d78a087f6f66b4a1cadf3b18014dfd7564736f6c63430008110033";

type PairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pair__factory extends ContractFactory {
  constructor(...args: PairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pair> {
    return super.deploy(overrides || {}) as Promise<Pair>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pair {
    return super.attach(address) as Pair;
  }
  override connect(signer: Signer): Pair__factory {
    return super.connect(signer) as Pair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairInterface {
    return new utils.Interface(_abi) as PairInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pair {
    return new Contract(address, _abi, signerOrProvider) as Pair;
  }
}
