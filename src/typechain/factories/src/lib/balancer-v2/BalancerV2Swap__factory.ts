/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BalancerV2Swap,
  BalancerV2SwapInterface,
} from "../../../../src/lib/balancer-v2/BalancerV2Swap";

const _abi = [
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromTokenAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "BalancerV2_swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506111cd806100206000396000f3fe60806040526004361061012e5760003560e01c8063ad5c4648116100ab578063cbc74de71161006f578063cbc74de71461013a578063ce0696141461029c578063e0bab4c4146102b1578063ebdfda5e146102c6578063f2cd3a12146102db578063f781b24e146102f057600080fd5b8063ad5c464814610248578063be78e8d9146101e1578063c1fe3e481461025d578063c9ac8c8e14610272578063ca8aa0e41461028757600080fd5b80635a33bbbe116100f25780635a33bbbe146101e1578063698e0796146101f657806380f907c41461020b57806389a302711461021e578063aa6430c61461023357600080fd5b8063020b627d1461013a57806323c34a64146101675780634aa07e641461018a5780634bc0dcb6146101b7578063565d3e6e146101cc57600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061014f610305565b604051600f9190910b81526020015b60405180910390f35b34801561017357600080fd5b5061017c610362565b60405190815260200161015e565b34801561019657600080fd5b5061019f61039e565b6040516001600160a01b03909116815260200161015e565b3480156101c357600080fd5b5061019f6103ef565b3480156101d857600080fd5b5061019f61041f565b3480156101ed57600080fd5b5061014f610470565b34801561020257600080fd5b5061019f61048d565b61017c610219366004610e05565b6104bd565b34801561022a57600080fd5b5061019f6107b5565b34801561023f57600080fd5b5061019f610806565b34801561025457600080fd5b5061019f610836565b34801561026957600080fd5b5061019f610887565b34801561027e57600080fd5b5061019f6108d8565b34801561029357600080fd5b5061019f610908565b3480156102a857600080fd5b5061019f610959565b3480156102bd57600080fd5b5061019f6109aa565b3480156102d257600080fd5b5061019f6109fb565b3480156102e757600080fd5b5061017c610a4c565b3480156102fc57600080fd5b5061019f610a88565b60004660011480610317575046610760145b156103225750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b60004660011480610374575046610760145b1561032257507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b600046600114806103b0575046610760145b156103ce5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036103225750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60004660011480610401575046610760145b15610322575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b60004660011480610431575046610760145b1561044f5750735e8422345238f34275888049021821e8e08caa1f90565b466005036103225750733e04888b1c07a9805861c19551f7ed53145bd8d490565b60004660011480610482575046610760145b156103225750600090565b6000466001148061049f575046610760145b1561032257507306325440d014e39736583c165c2963ba99faf14e90565b6000806104c8610959565b60408051600180825281830190925291925060009190816020015b6105186040518060a0016040528060008019168152602001600081526020016000815260200160008152602001606081525090565b8152602001906001900390816104e35790505090506040518060a001604052808581526020016000815260200160018152602001868152602001604051806020016040528060008152508152508160008151811061057857610578610e5d565b60209081029190910101526040805160028082526060820190925260009181602001602082028036833701905050905087816000815181106105bc576105bc610e5d565b60200260200101906001600160a01b031690816001600160a01b03168152505086816001815181106105f0576105f0610e5d565b6001600160a01b039290921660209283029190910182015260408051600280825260608201835260009391929091830190803683370190505090506001600160ff1b038160008151811061064657610646610e5d565b6020026020010181815250506001600160ff1b038160018151811061066d5761066d610e5d565b602090810291909101015260006001600160a01b038a1661068f57503461069a565b61069a8a868a610ab8565b60408051608081018252308082526000602083018190528284019190915260608201819052915163945bcec960e01b81526001600160a01b0388169163945bcec99185916106f59186918b918b91908b904290600401610f37565b60006040518083038185885af1158015610713573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261073c9190810190611067565b905060008160018151811061075357610753610e5d565b602002602001015112610780578060018151811061077357610773610e5d565b60200260200101516107a4565b8060018151811061079357610793610e5d565b60200260200101516107a490611125565b96505050505050505b949350505050565b600046600114806107c7575046610760145b156107e5575073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b466005036103225750732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b60004660011480610818575046610760145b15610322575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b60004660011480610848575046610760145b15610866575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b46600503610322575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60004660011480610899575046610760145b156108b7575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036103225750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b600046600114806108ea575046610760145b1561044f575073ac3e018457b222d93114458476f3e3416abbe38f90565b6000466001148061091a575046610760145b15610938575073ae78736cd615f374d3085123a210448e74fc639390565b46600503610322575073ae78736cd615f374d3085123a210448e74fc639390565b6000466001148061096b575046610760145b15610989575073ba12222222228d8ba445958a75a0704d566bf2c890565b46600503610322575073ba12222222228d8ba445958a75a0704d566bf2c890565b600046600114806109bc575046610760145b156109da5750736b175474e89094c44da98b954eedeac495271d0f90565b4660050361032257507373967c6a0904aa032c103b4104747e88c566b1a290565b60004660011480610a0d575046610760145b15610a2b575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036103225750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b60004660011480610a5e575046610760145b1561032257507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b60004660011480610a9a575046610760145b15610322575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b801580610b325750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b30919061114f565b155b610b9d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610359565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052610bef908490610bf4565b505050565b6000610c49826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cc69092919063ffffffff16565b805190915015610bef5780806020019051810190610c679190611168565b610bef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610359565b60606107ad848460008585600080866001600160a01b03168587604051610ced9190611191565b60006040518083038185875af1925050503d8060008114610d2a576040519150601f19603f3d011682016040523d82523d6000602084013e610d2f565b606091505b5091509150610d4087838387610d4b565b979650505050505050565b60608315610dba578251600003610db3576001600160a01b0385163b610db35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610359565b50816107ad565b6107ad8383815115610dcf5781518083602001fd5b8060405162461bcd60e51b815260040161035991906111ad565b80356001600160a01b0381168114610e0057600080fd5b919050565b60008060008060808587031215610e1b57600080fd5b610e2485610de9565b9350610e3260208601610de9565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60005b83811015610e8e578181015183820152602001610e76565b50506000910152565b60008151808452610eaf816020860160208601610e73565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015610efc5781516001600160a01b031687529582019590820190600101610ed7565b509495945050505050565b600081518084526020808501945080840160005b83811015610efc57815187529582019590820190600101610f1b565b600061012080830160028a10610f5d57634e487b7160e01b600052602160045260246000fd5b89845260208085019290925288519081905261014080850192600583901b8601909101918a820160005b82811015610fea5787850361013f190186528151805186528481015185870152604080820151908701526060808201519087015260809081015160a091870182905290610fd681880183610e97565b978601979650505090830190600101610f87565b5050505083810360408501526110008189610ec3565b915050611040606084018780516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b82810360e08401526110528186610f07565b91505082610100830152979650505050505050565b6000602080838503121561107a57600080fd5b825167ffffffffffffffff8082111561109257600080fd5b818501915085601f8301126110a657600080fd5b8151818111156110b8576110b8610e47565b8060051b604051601f19603f830116810181811085821117156110dd576110dd610e47565b6040529182528482019250838101850191888311156110fb57600080fd5b938501935b8285101561111957845184529385019392850192611100565b98975050505050505050565b6000600160ff1b820161114857634e487b7160e01b600052601160045260246000fd5b5060000390565b60006020828403121561116157600080fd5b5051919050565b60006020828403121561117a57600080fd5b8151801515811461118a57600080fd5b9392505050565b600082516111a3818460208701610e73565b9190910192915050565b60208152600061118a6020830184610e9756fea164736f6c6343000811000a";

type BalancerV2SwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerV2SwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerV2Swap__factory extends ContractFactory {
  constructor(...args: BalancerV2SwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerV2Swap> {
    return super.deploy(overrides || {}) as Promise<BalancerV2Swap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerV2Swap {
    return super.attach(address) as BalancerV2Swap;
  }
  override connect(signer: Signer): BalancerV2Swap__factory {
    return super.connect(signer) as BalancerV2Swap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerV2SwapInterface {
    return new utils.Interface(_abi) as BalancerV2SwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerV2Swap {
    return new Contract(address, _abi, signerOrProvider) as BalancerV2Swap;
  }
}
