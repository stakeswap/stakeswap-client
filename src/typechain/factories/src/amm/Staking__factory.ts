/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Staking, StakingInterface } from "../../../src/amm/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "lp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalEthForShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolETHAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardToStaker",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162001d6238038062001d62833981016040819052620000399162000164565b604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012060035560058054336001600160a01b0319918216179091556006805482166001600160a01b0394851617905560078054909116919092161790556200019c565b80516001600160a01b03811681146200015f57600080fd5b919050565b600080604083850312156200017857600080fd5b620001838362000147565b9150620001936020840162000147565b90509250929050565b611bb680620001ac6000396000f3fe6080604052600436106102345760003560e01c806395d89b411161012e578063ca8aa0e4116100ab578063dda5e8e11161006f578063dda5e8e114610699578063e0bab4c4146106af578063ebdfda5e146106c4578063f2cd3a12146106d9578063f781b24e146106ee57600080fd5b8063ca8aa0e414610615578063cbc74de714610240578063ce0696141461062a578063d505accf1461063f578063dd62ed3e1461066157600080fd5b8063ad5c4648116100f2578063ad5c4648146105b6578063be78e8d914610421578063c1fe3e48146105cb578063c45a0155146105e0578063c9ac8c8e1461060057600080fd5b806395d89b41146104fa578063a694fc3a1461052c578063a8aa1b3114610561578063a9059cbb14610581578063aa6430c6146105a157600080fd5b80633644e515116101bc578063698e079611610180578063698e07961461043657806370a082311461044b5780637ecebe00146104785780638381e182146104a557806389a30271146104e557600080fd5b80633644e515146103cc5780634aa07e64146103e25780634bc0dcb6146103f7578063565d3e6e1461040c5780635a33bbbe1461042157600080fd5b806323b872dd1161020357806323b872dd1461030457806323c34a6414610324578063245a7bfc1461033957806330adf81f14610371578063313ce567146103a557600080fd5b8063020b627d1461024057806306fdde031461026d578063095ea7b3146102b057806318160ddd146102e057600080fd5b3661023b57005b600080fd5b34801561024c57600080fd5b50610255610703565b604051600f9190910b81526020015b60405180910390f35b34801561027957600080fd5b506102a36040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516102649190611909565b3480156102bc57600080fd5b506102d06102cb36600461193f565b610760565b6040519015158152602001610264565b3480156102ec57600080fd5b506102f660005481565b604051908152602001610264565b34801561031057600080fd5b506102d061031f366004611969565b610777565b34801561033057600080fd5b506102f661080b565b34801561034557600080fd5b50600654610359906001600160a01b031681565b6040516001600160a01b039091168152602001610264565b34801561037d57600080fd5b506102f67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b3480156103b157600080fd5b506103ba601281565b60405160ff9091168152602001610264565b3480156103d857600080fd5b506102f660035481565b3480156103ee57600080fd5b50610359610847565b34801561040357600080fd5b50610359610898565b34801561041857600080fd5b506103596108c8565b34801561042d57600080fd5b50610255610919565b34801561044257600080fd5b50610359610936565b34801561045757600080fd5b506102f66104663660046119a5565b60016020526000908152604090205481565b34801561048457600080fd5b506102f66104933660046119a5565b60046020526000908152604090205481565b3480156104b157600080fd5b506104c56104c03660046119c0565b610966565b604080519485526020850193909352918301526060820152608001610264565b3480156104f157600080fd5b50610359610c04565b34801561050657600080fd5b506102a3604051806040016040528060068152602001652aa72496ab1960d11b81525081565b34801561053857600080fd5b5061054c6105473660046119ec565b610c55565b60408051928352602083019190915201610264565b34801561056d57600080fd5b50600754610359906001600160a01b031681565b34801561058d57600080fd5b506102d061059c36600461193f565b610e02565b3480156105ad57600080fd5b50610359610e0f565b3480156105c257600080fd5b50610359610e3f565b3480156105d757600080fd5b50610359610e90565b3480156105ec57600080fd5b50600554610359906001600160a01b031681565b34801561060c57600080fd5b50610359610ee1565b34801561062157600080fd5b50610359610f11565b34801561063657600080fd5b50610359610f62565b34801561064b57600080fd5b5061065f61065a366004611a05565b610fb3565b005b34801561066d57600080fd5b506102f661067c366004611a78565b600260209081526000928352604080842090915290825290205481565b3480156106a557600080fd5b506102f660085481565b3480156106bb57600080fd5b506103596111c7565b3480156106d057600080fd5b50610359611218565b3480156106e557600080fd5b506102f6611269565b3480156106fa57600080fd5b506103596112a5565b60004660011480610715575046610760145b156107205750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b600061076d3384846112d5565b5060015b92915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146107f6576001600160a01b03841660009081526002602090815260408083203384529091529020546107d19083611337565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61080184848461138d565b5060019392505050565b6000466001148061081d575046610760145b1561072057507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b60004660011480610859575046610760145b156108775750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036107205750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b600046600114806108aa575046610760145b15610720575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b600046600114806108da575046610760145b156108f85750735e8422345238f34275888049021821e8e08caa1f90565b466005036107205750733e04888b1c07a9805861c19551f7ed53145bd8d490565b6000466001148061092b575046610760145b156107205750600090565b60004660011480610948575046610760145b1561072057507306325440d014e39736583c165c2963ba99faf14e90565b6000806000806009546001146109a75760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610757565b60006009819055546007546040516370a0823160e01b8152306004820152829189916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190611aa2565b610a299190611ad1565b610a339190611ae8565b94508087600854610a449190611ad1565b610a4e9190611ae8565b9250610a5a3388611433565b60065460405163db006a7560e01b8152600481018990526001600160a01b039091169063db006a75906024016020604051808303816000875af1158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190611aa2565b9350828411610b125760405162461bcd60e51b8152602060048201526015602482015274139151d05512559157d4d51052d157d49155d05491605a1b6044820152606401610757565b610b1c8385611b0a565b91508260086000828254610b309190611b0a565b90915550506007546040805163b1e5f8ed60e01b815290516001600160a01b039092169163b1e5f8ed918691600480830192600092919082900301818588803b158015610b7c57600080fd5b505af1158015610b90573d6000803e3d6000fd5b5050505050610b9f86836114c5565b610bde6040518060400160405280601d81526020017f726577617264546f5374616b65722066726f6d20636f6e74726163743a0000008152508361156d565b600754610bf5906001600160a01b031687876115b6565b50600160095592959194509250565b60004660011480610c16575046610760145b15610c34575073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b466005036107205750732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b600080600954600114610c935760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610757565b6000600955600754610cb0906001600160a01b03163330866116b6565b60075460405163393127a160e01b8152600481018590526001600160a01b039091169063393127a1906024016020604051808303816000875af1158015610cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1f9190611aa2565b5047905060008111610d625760405162461bcd60e51b815260206004820152600c60248201526b16915493d7d1115413d4d25560a21b6044820152606401610757565b8060086000828254610d749190611b1d565b909155505060065460408051630d0e30db60e41b815290516001600160a01b039092169163d0e30db09184916004808301926020929190829003018185885af1158015610dc5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610dea9190611aa2565b9150610df633836117c0565b60016009559092909150565b600061076d33848461138d565b60004660011480610e21575046610760145b15610720575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b60004660011480610e51575046610760145b15610e6f575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b46600503610720575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60004660011480610ea2575046610760145b15610ec0575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036107205750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b60004660011480610ef3575046610760145b156108f8575073ac3e018457b222d93114458476f3e3416abbe38f90565b60004660011480610f23575046610760145b15610f41575073ae78736cd615f374d3085123a210448e74fc639390565b46600503610720575073ae78736cd615f374d3085123a210448e74fc639390565b60004660011480610f74575046610760145b15610f92575073ba12222222228d8ba445958a75a0704d566bf2c890565b46600503610720575073ba12222222228d8ba445958a75a0704d566bf2c890565b42841015610ff85760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606401610757565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761104b83611b30565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016110c492919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa15801561112f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111655750886001600160a01b0316816001600160a01b0316145b6111b15760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152606401610757565b6111bc8989896112d5565b505050505050505050565b600046600114806111d9575046610760145b156111f75750736b175474e89094c44da98b954eedeac495271d0f90565b4660050361072057507373967c6a0904aa032c103b4104747e88c566b1a290565b6000466001148061122a575046610760145b15611248575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036107205750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000466001148061127b575046610760145b1561072057507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600046600114806112b7575046610760145b15610720575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000826113448382611b0a565b91508111156107715760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b6044820152606401610757565b6001600160a01b0383166000908152600160205260409020546113b09082611337565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546113df9082611843565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061132a9085815260200190565b6001600160a01b0382166000908152600160205260409020546114569082611337565b6001600160a01b0383166000908152600160205260408120919091555461147d9082611337565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b604080516000808252602082019092526001600160a01b0384169083906040516114ef9190611b49565b60006040518083038185875af1925050503d806000811461152c576040519150601f19603f3d011682016040523d82523d6000602084013e611531565b606091505b50509050806115685760405162461bcd60e51b815260206004820152600360248201526253544560e81b6044820152606401610757565b505050565b6115b28282604051602401611583929190611b65565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611898565b5050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916116129190611b49565b6000604051808303816000865af19150503d806000811461164f576040519150601f19603f3d011682016040523d82523d6000602084013e611654565b606091505b509150915081801561167e57508051158061167e57508080602001905181019061167e9190611b87565b6116af5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610757565b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161171a9190611b49565b6000604051808303816000865af19150503d8060008114611757576040519150601f19603f3d011682016040523d82523d6000602084013e61175c565b606091505b50915091508180156117865750805115806117865750808060200190518101906117869190611b87565b6117b85760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610757565b505050505050565b6000546117cd9082611843565b60009081556001600160a01b0383168152600160205260409020546117f29082611843565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114b99085815260200190565b6000826118508382611b1d565b91508110156107715760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b6044820152606401610757565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60005b838110156118d45781810151838201526020016118bc565b50506000910152565b600081518084526118f58160208601602086016118b9565b601f01601f19169290920160200192915050565b60208152600061191c60208301846118dd565b9392505050565b80356001600160a01b038116811461193a57600080fd5b919050565b6000806040838503121561195257600080fd5b61195b83611923565b946020939093013593505050565b60008060006060848603121561197e57600080fd5b61198784611923565b925061199560208501611923565b9150604084013590509250925092565b6000602082840312156119b757600080fd5b61191c82611923565b600080604083850312156119d357600080fd5b823591506119e360208401611923565b90509250929050565b6000602082840312156119fe57600080fd5b5035919050565b600080600080600080600060e0888a031215611a2057600080fd5b611a2988611923565b9650611a3760208901611923565b95506040880135945060608801359350608088013560ff81168114611a5b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611a8b57600080fd5b611a9483611923565b91506119e360208401611923565b600060208284031215611ab457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761077157610771611abb565b600082611b0557634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561077157610771611abb565b8082018082111561077157610771611abb565b600060018201611b4257611b42611abb565b5060010190565b60008251611b5b8184602087016118b9565b9190910192915050565b604081526000611b7860408301856118dd565b90508260208301529392505050565b600060208284031215611b9957600080fd5b8151801515811461191c57600080fdfea164736f6c6343000811000a";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aggregator: PromiseOrValue<string>,
    _pair: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _aggregator,
      _pair,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _aggregator: PromiseOrValue<string>,
    _pair: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_aggregator, _pair, overrides || {});
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
