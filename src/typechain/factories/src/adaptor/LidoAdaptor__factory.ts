/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LidoAdaptor,
  LidoAdaptorInterface,
} from "../../../src/adaptor/LidoAdaptor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int128",
        name: "fromTokenIndex",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "toTokenIndex",
        type: "int128",
      },
    ],
    name: "Curve_swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "getETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b5060016000556080516118e2610032600039600050506118e26000f3fe6080604052600436106101f25760003560e01c8063ad5c46481161010d578063ce069614116100a0578063ebdfda5e1161006f578063ebdfda5e146104c3578063ef46b2ab146104d8578063f2cd3a12146104f8578063f781b24e1461050d578063fbe85f061461052257600080fd5b8063ce0696141461047e578063d0e30db014610493578063d148d3921461049b578063e0bab4c4146104ae57600080fd5b8063c89d5b8b116100dc578063c89d5b8b1461043f578063c9ac8c8e14610454578063ca8aa0e414610469578063cbc74de7146101fe57600080fd5b8063ad5c4648146103f5578063be78e8d914610315578063c1fe3e481461040a578063c2507ac11461041f57600080fd5b80635a33bbbe11610185578063a482171911610154578063a482171914610387578063aa6430c61461038f578063aa6ca808146103a4578063aaf5eb68146103d957600080fd5b80635a33bbbe14610315578063698e07961461032a57806389a302711461033f5780638c9adb2d1461035457600080fd5b806339443b8e116101c157806339443b8e1461028e5780634aa07e64146102be5780634bc0dcb6146102eb578063565d3e6e1461030057600080fd5b8063020b627d146101fe5780632397e4d71461022b57806323c34a64146102595780632e1a7d4d1461026e57600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b50610213610543565b604051600f9190910b81526020015b60405180910390f35b34801561023757600080fd5b5061024b610246366004611696565b6105a0565b604051908152602001610222565b34801561026557600080fd5b5061024b61064f565b34801561027a57600080fd5b5061024b610289366004611696565b61068b565b34801561029a57600080fd5b506102ae6102a9366004611696565b61070d565b6040519015158152602001610222565b3480156102ca57600080fd5b506102d36107e2565b6040516001600160a01b039091168152602001610222565b3480156102f757600080fd5b506102d3610833565b34801561030c57600080fd5b506102d3610863565b34801561032157600080fd5b506102136108b4565b34801561033657600080fd5b506102d36108d1565b34801561034b57600080fd5b506102d3610901565b34801561036057600080fd5b5060408051808201825260048152636c69646f60e01b6020820152905161022291906116d3565b61024b610952565b34801561039b57600080fd5b506102d36109d2565b3480156103b057600080fd5b506103b9610a02565b604080516001600160a01b03938416815292909116602083015201610222565b3480156103e557600080fd5b5061024b670de0b6b3a764000081565b34801561040157600080fd5b506102d3610a13565b34801561041657600080fd5b506102d3610a64565b34801561042b57600080fd5b5061024b61043a366004611696565b610ab5565b34801561044b57600080fd5b5061024b610aea565b34801561046057600080fd5b506102d3610c40565b34801561047557600080fd5b506102d3610c70565b34801561048a57600080fd5b506102d3610cc1565b61024b610d12565b61024b6104a936600461172f565b610e0a565b3480156104ba57600080fd5b506102d3610ebe565b3480156104cf57600080fd5b506102d3610f0f565b3480156104e457600080fd5b5061024b6104f3366004611696565b610f60565b34801561050457600080fd5b5061024b610fd8565b34801561051957600080fd5b506102d3611014565b34801561052e57600080fd5b506102ae61053d366004611696565b50600090565b60004660011480610555575046610760145b156105605750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b60006105aa611044565b600082116105e85760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b6044820152606401610597565b60006105f2610a02565b9150506106018133308661109d565b600061060c8461110e565b604051909150339082156108fc029083906000818181858888f1935050505015801561063c573d6000803e3d6000fd5b5091505061064a6001600055565b919050565b60004660011480610661575046610760145b1561056057507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b6000610695611044565b600082116106d35760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b6044820152606401610597565b60405162461bcd60e51b815260206004820152600f60248201526e43414e4e4f5420574954484452415760881b6044820152606401610597565b60008160000361071f57506000919050565b6000806000806000806000610732610a64565b6001600160a01b031663665b4b0b6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610793919061179d565b965096509650965096509650965086156107b65750600098975050505050505050565b85156107d357848911156107d35750600098975050505050505050565b50600198975050505050505050565b600046600114806107f4575046610760145b156108125750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036105605750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60004660011480610845575046610760145b15610560575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b60004660011480610875575046610760145b156108935750735e8422345238f34275888049021821e8e08caa1f90565b466005036105605750733e04888b1c07a9805861c19551f7ed53145bd8d490565b600046600114806108c6575046610760145b156105605750600090565b600046600114806108e3575046610760145b1561056057507306325440d014e39736583c165c2963ba99faf14e90565b60004660011480610913575046610760145b15610931575073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b466005036105605750732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b600061095c611044565b6000341161099e5760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b6044820152606401610597565b60006109a86111b9565b905060006109b4610a02565b9150506109c28133846112ed565b5090506109cf6001600055565b90565b600046600114806109e4575046610760145b15610560575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600080610a0d6107e2565b90509091565b60004660011480610a25575046610760145b15610a43575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b46600503610560575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60004660011480610a76575046610760145b15610a94575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036105605750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b6000610ac8670de0b6b3a7640000610f60565b610ada83670de0b6b3a7640000611815565b610ae4919061182c565b92915050565b600080610af56107e2565b6001600160a01b031663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b56919061184e565b90506000610b62610a64565b6001600160a01b031663ced72f876040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc39190611867565b61ffff16905081600003610bda5760009250505090565b6000610bea635fdbd4dc4261188b565b9050612710610bf9838261188b565b82610c0c670de0b6b3a76400008761188b565b610c1a906301e187e0611815565b610c24919061182c565b610c2e9190611815565b610c38919061182c565b935050505090565b60004660011480610c52575046610760145b15610893575073ac3e018457b222d93114458476f3e3416abbe38f90565b60004660011480610c82575046610760145b15610ca0575073ae78736cd615f374d3085123a210448e74fc639390565b46600503610560575073ae78736cd615f374d3085123a210448e74fc639390565b60004660011480610cd3575046610760145b15610cf1575073ba12222222228d8ba445958a75a0704d566bf2c890565b46600503610560575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000610d1c611044565b60003411610d5e5760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b6044820152606401610597565b610d673461070d565b610da45760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b6044820152606401610597565b6000610dae611322565b90506000610dba610a02565b915050610dc88133846112ed565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a25090506109cf6001600055565b6000806001600160a01b038716610e22575034610e2d565b610e2d87868861139c565b604051630f7c084960e21b8152600f85810b600483015284900b602482015260448101879052600060648201526001600160a01b03861690633df0212490839060840160206040518083038185885af1158015610e8e573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610eb3919061184e565b979650505050505050565b60004660011480610ed0575046610760145b15610eee5750736b175474e89094c44da98b954eedeac495271d0f90565b4660050361056057507373967c6a0904aa032c103b4104747e88c566b1a290565b60004660011480610f21575046610760145b15610f3f575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036105605750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000610f6a6107e2565b6001600160a01b031663bb2952fc836040518263ffffffff1660e01b8152600401610f9791815260200190565b602060405180830381865afa158015610fb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae4919061184e565b60004660011480610fea575046610760145b1561056057507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b60004660011480611026575046610760145b15610560575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b6002600054036110965760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610597565b6002600055565b6040516001600160a01b03808516602483015283166044820152606481018290526111089085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526114b1565b50505050565b6000806111196107e2565b6001600160a01b031663de0e9a3e846040518263ffffffff1660e01b815260040161114691815260200190565b6020604051808303816000875af1158015611165573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611189919061184e565b905060006111b1611198610a64565b836111a1610833565b6111a9610543565b6104a96108b4565b949350505050565b6000806111da6000346111ca610833565b6111d26108b4565b6104a9610543565b90506111e4610a64565b6001600160a01b031663095ea7b36111fa6107e2565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b919061189e565b5060006112766107e2565b6001600160a01b031663ea598cb0836040518263ffffffff1660e01b81526004016112a391815260200190565b6020604051808303816000875af11580156112c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e6919061184e565b9392505050565b6040516001600160a01b03831660248201526044810182905261131d90849063a9059cbb60e01b906064016110d1565b505050565b60008061132d610a64565b60405163a1903eab60e01b8152600060048201526001600160a01b03919091169063a1903eab90349060240160206040518083038185885af1158015611377573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906111da919061184e565b8015806114165750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156113f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611414919061184e565b155b6114815760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610597565b6040516001600160a01b03831660248201526044810182905261131d90849063095ea7b360e01b906064016110d1565b6000611506826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115839092919063ffffffff16565b80519091501561131d5780806020019051810190611524919061189e565b61131d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610597565b60606111b1848460008585600080866001600160a01b031685876040516115aa91906118b9565b60006040518083038185875af1925050503d80600081146115e7576040519150601f19603f3d011682016040523d82523d6000602084013e6115ec565b606091505b5091509150610eb38783838760608315611667578251600003611660576001600160a01b0385163b6116605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610597565b50816111b1565b6111b1838381511561167c5781518083602001fd5b8060405162461bcd60e51b815260040161059791906116d3565b6000602082840312156116a857600080fd5b5035919050565b60005b838110156116ca5781810151838201526020016116b2565b50506000910152565b60208152600082518060208401526116f28160408501602087016116af565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461064a57600080fd5b8035600f81900b811461064a57600080fd5b600080600080600060a0868803121561174757600080fd5b61175086611706565b94506020860135935061176560408701611706565b92506117736060870161171d565b91506117816080870161171d565b90509295509295909350565b8051801515811461064a57600080fd5b600080600080600080600060e0888a0312156117b857600080fd5b6117c18861178d565b96506117cf6020890161178d565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ae457610ae46117ff565b60008261184957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561186057600080fd5b5051919050565b60006020828403121561187957600080fd5b815161ffff811681146112e657600080fd5b81810381811115610ae457610ae46117ff565b6000602082840312156118b057600080fd5b6112e68261178d565b600082516118cb8184602087016116af565b919091019291505056fea164736f6c6343000811000a";

type LidoAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LidoAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LidoAdaptor__factory extends ContractFactory {
  constructor(...args: LidoAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LidoAdaptor> {
    return super.deploy(overrides || {}) as Promise<LidoAdaptor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LidoAdaptor {
    return super.attach(address) as LidoAdaptor;
  }
  override connect(signer: Signer): LidoAdaptor__factory {
    return super.connect(signer) as LidoAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoAdaptorInterface {
    return new utils.Interface(_abi) as LidoAdaptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoAdaptor {
    return new Contract(address, _abi, signerOrProvider) as LidoAdaptor;
  }
}
