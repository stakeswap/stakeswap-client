/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RocketPoolAdaptor,
  RocketPoolAdaptorInterface,
} from "../../../src/adaptor/RocketPoolAdaptor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BalancerV2Vault",
    outputs: [
      {
        internalType: "contract BalancerV2VaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_rETH_ETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BalancerV2_wstETH_WETH_POOL_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_frxETH_ETH_POOL_TOKEN_INDEX_frxETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_LP_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_ETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Curve_stETH_ETH_POOL_TOKEN_INDEX_stETH",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract WETHInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adaptorName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frxETHMinter",
    outputs: [
      {
        internalType: "contract frxETHMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "getETHAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDAOProtocolSettingsDeposit",
    outputs: [
      {
        internalType: "contract RocketDAOProtocolSettingsDepositInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketDrocketDepositPool",
    outputs: [
      {
        internalType: "contract RocketDepositPoolInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractName",
        type: "string",
      },
    ],
    name: "getRocketPoolContractAddresst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRocketVault",
    outputs: [
      {
        internalType: "contract RocketVaultInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rETH",
    outputs: [
      {
        internalType: "contract IrETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rocketPoolStorage",
    outputs: [
      {
        internalType: "contract RocketStorageInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sfrxETH",
    outputs: [
      {
        internalType: "contract sfrxETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wstETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040524260805234801561001457600080fd5b506001600055608051611d3d61003260003960005050611d3d6000f3fe60806040526004361061021e5760003560e01c8063aa6ca80811610123578063ca8aa0e4116100ab578063ebdfda5e1161006f578063ebdfda5e14610556578063ef46b2ab1461056b578063f2cd3a121461058b578063f781b24e146105a0578063fbe85f06146105b557600080fd5b8063ca8aa0e41461050f578063cbc74de71461022a578063ce06961414610524578063d0e30db014610539578063e0bab4c41461054157600080fd5b8063c1fe3e48116100f2578063c1fe3e4814610490578063c2507ac1146104a5578063c54505ca146104c5578063c89d5b8b146104e5578063c9ac8c8e146104fa57600080fd5b8063aa6ca8081461042a578063aaf5eb681461045f578063ad5c46481461047b578063be78e8d91461036b57600080fd5b8063565d3e6e116101a657806389a302711161017557806389a30271146103aa5780638c9adb2d146103bf5780639eb0506c146103f8578063a48217191461040d578063aa6430c61461041557600080fd5b8063565d3e6e146103565780635a33bbbe1461036b5780636718cdea14610380578063698e07961461039557600080fd5b80632e1a7d4d116101ed5780632e1a7d4d146102c7578063353d60e3146102e757806339443b8e146102fc5780634aa07e641461032c5780634bc0dcb61461034157600080fd5b8063020b627d1461022a5780630aa22427146102575780632397e4d71461028457806323c34a64146102b257600080fd5b3661022557005b600080fd5b34801561023657600080fd5b5061023f6105d6565b604051600f9190910b81526020015b60405180910390f35b34801561026357600080fd5b5061026c610633565b6040516001600160a01b03909116815260200161024e565b34801561029057600080fd5b506102a461029f3660046119db565b610678565b60405190815260200161024e565b3480156102be57600080fd5b506102a4610727565b3480156102d357600080fd5b506102a46102e23660046119db565b610763565b3480156102f357600080fd5b5061026c6107e5565b34801561030857600080fd5b5061031c6103173660046119db565b610815565b604051901515815260200161024e565b34801561033857600080fd5b5061026c610a21565b34801561034d57600080fd5b5061026c610a72565b34801561036257600080fd5b5061026c610aa2565b34801561037757600080fd5b5061023f610af3565b34801561038c57600080fd5b5061026c610b10565b3480156103a157600080fd5b5061026c610b3e565b3480156103b657600080fd5b5061026c610b6e565b3480156103cb57600080fd5b50604080518082018252600a8152691c9bd8dad95d1c1bdbdb60b21b6020820152905161024e9190611a44565b34801561040457600080fd5b5061026c610bbf565b6102a4610bf3565b34801561042157600080fd5b5061026c610c73565b34801561043657600080fd5b5061043f610ca3565b604080516001600160a01b0393841681529290911660208301520161024e565b34801561046b57600080fd5b506102a4670de0b6b3a764000081565b34801561048757600080fd5b5061026c610cb4565b34801561049c57600080fd5b5061026c610d05565b3480156104b157600080fd5b506102a46104c03660046119db565b610d56565b3480156104d157600080fd5b5061026c6104e0366004611a74565b610d8b565b3480156104f157600080fd5b506102a4610e0a565b34801561050657600080fd5b5061026c610ecc565b34801561051b57600080fd5b5061026c610efc565b34801561053057600080fd5b5061026c610f4d565b6102a4610f9e565b34801561054d57600080fd5b5061026c611096565b34801561056257600080fd5b5061026c6110e7565b34801561057757600080fd5b506102a46105863660046119db565b611138565b34801561059757600080fd5b506102a46111b0565b3480156105ac57600080fd5b5061026c6111ec565b3480156105c157600080fd5b5061031c6105d03660046119db565b50600090565b600046600114806105e8575046610760145b156105f35750600190565b60405162461bcd60e51b815260206004820152601060248201526f1d5b9adb9bdddb8818da185a5b881a5960821b60448201526064015b60405180910390fd5b60006106736040518060400160405280602081526020017f726f636b657444414f50726f746f636f6c53657474696e67734465706f736974815250610d8b565b905090565b600061068261121c565b600082116106c05760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b604482015260640161062a565b60006106ca610ca3565b9150506106d981333086611275565b60006106e4846112e6565b604051909150339082156108fc029083906000818181858888f19350505050158015610714573d6000803e3d6000fd5b509150506107226001600055565b919050565b60004660011480610739575046610760145b156105f357507f1e19cf2d73a72ef1332c882f20534b6519be027600020000000000000000011290565b600061076d61121c565b600082116107ab5760405162461bcd60e51b815260206004820152600b60248201526a16915493c8105353d5539560aa1b604482015260640161062a565b60405162461bcd60e51b815260206004820152600f60248201526e43414e4e4f5420574954484452415760881b604482015260640161062a565b600046600114806107f7575046610760145b156105f35750731d8f8f00cfa6758d7be78336684788fb0ee0fa4690565b600080610820610633565b9050806001600160a01b0316636ada78476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190611b25565b6108915750600092915050565b806001600160a01b031663035cf1426040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f39190611b47565b8310156109035750600092915050565b600061090d610b10565b9050816001600160a01b031663fd6ce89e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109719190611b47565b6040516335ee5f8760e01b81526020600482015260116024820152701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b604482015285906001600160a01b038416906335ee5f8790606401602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190611b47565b610a079190611b76565b1115610a17575060009392505050565b5060019392505050565b60004660011480610a33575046610760145b15610a515750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca090565b466005036105f35750736320cd32aa674d2898a68ec82e869385fc5f7e2f90565b60004660011480610a84575046610760145b156105f3575073dc24316b9ae028f1497c275eb9192a3ea0f6702290565b60004660011480610ab4575046610760145b15610ad25750735e8422345238f34275888049021821e8e08caa1f90565b466005036105f35750733e04888b1c07a9805861c19551f7ed53145bd8d490565b60004660011480610b05575046610760145b156105f35750600090565b60006106736040518060400160405280600b81526020016a1c9bd8dad95d15985d5b1d60aa1b815250610d8b565b60004660011480610b50575046610760145b156105f357507306325440d014e39736583c165c2963ba99faf14e90565b60004660011480610b80575046610760145b15610b9e575073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4890565b466005036105f35750732f3a40a3db8a7e3d09b0adfefbce4f6f8192755790565b6000610673604051806040016040528060118152602001701c9bd8dad95d11195c1bdcda5d141bdbdb607a1b815250610d8b565b6000610bfd61121c565b60003411610c3f5760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b604482015260640161062a565b6000610c496114ff565b90506000610c55610ca3565b915050610c6381338461161f565b509050610c706001600055565b90565b60004660011480610c85575046610760145b156105f3575073a1f8a6807c402e4a15ef4eba36528a3fed24e57790565b600080610cae610efc565b90509091565b60004660011480610cc6575046610760145b15610ce4575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290565b466005036105f3575073b4fbf271143f4fbf7b91a5ded31805e42b2208d690565b60004660011480610d17575046610760145b15610d35575073ae7ab96520de3a18e5e111b5eaab095312d7fe8490565b466005036105f35750731643e812ae58766192cf7d2cf9567df2c37e9b7f90565b6000610d69670de0b6b3a7640000611138565b610d7b83670de0b6b3a7640000611b89565b610d859190611ba0565b92915050565b600080610dbd83604051602001610da29190611bc2565b60405160208183030381529060405280519060200120611654565b90506001600160a01b038116610d855760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b604482015260640161062a565b600080610e15610efc565b6001600160a01b031663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e769190611b47565b905080600003610e8857600091505090565b6000610e986361554c7b42611bfa565b905080610ead670de0b6b3a764000084611bfa565b610ebb906301e187e0611b89565b610ec59190611ba0565b9250505090565b60004660011480610ede575046610760145b15610ad2575073ac3e018457b222d93114458476f3e3416abbe38f90565b60004660011480610f0e575046610760145b15610f2c575073ae78736cd615f374d3085123a210448e74fc639390565b466005036105f3575073ae78736cd615f374d3085123a210448e74fc639390565b60004660011480610f5f575046610760145b15610f7d575073ba12222222228d8ba445958a75a0704d566bf2c890565b466005036105f3575073ba12222222228d8ba445958a75a0704d566bf2c890565b6000610fa861121c565b60003411610fea5760405162461bcd60e51b815260206004820152600f60248201526e16915493c811551208105353d55395608a1b604482015260640161062a565b610ff334610815565b6110305760405162461bcd60e51b815260206004820152600e60248201526d10d0539393d50811115413d4d25560921b604482015260640161062a565b600061103a6116cc565b90506000611046610ca3565b91505061105481338461161f565b60405182815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a2509050610c706001600055565b600046600114806110a8575046610760145b156110c65750736b175474e89094c44da98b954eedeac495271d0f90565b466005036105f357507373967c6a0904aa032c103b4104747e88c566b1a290565b600046600114806110f9575046610760145b15611117575073bafa44efe7901e04e39dad13167d089c559c113890565b466005036105f35750736421d1ca6cd35852362806a2ded2a49b6fa8bef590565b6000611142610efc565b6001600160a01b0316638b32fa23836040518263ffffffff1660e01b815260040161116f91815260200190565b602060405180830381865afa15801561118c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d859190611b47565b600046600114806111c2575046610760145b156105f357507f32296969ef14eb0c6d29669c550d4a044913023000020000000000000000008090565b600046600114806111fe575046610760145b156105f3575073f43211935c781d5ca1a41d2041f397b8a7366c7a90565b60026000540361126e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161062a565b6002600055565b6040516001600160a01b03808516602483015283166044820152606481018290526112e09085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611730565b50505050565b6000806112f1610f4d565b90506112fb610efc565b60405163095ea7b360e01b81526001600160a01b03838116600483015260248201869052919091169063095ea7b3906044016020604051808303816000875af115801561134c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113709190611b25565b50611379611992565b611381610727565b815260006020820152611392610efc565b6001600160a01b031660408201526113a8610cb4565b6001600160a01b031660608201526080810184905260408051602081019091526000815260a08201526113fb60408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516906352bbbe2990611449908690869086904290600401611c0d565b6020604051808303816000875af1158015611468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148c9190611b47565b9050611496610cb4565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b81526004016114c391815260200190565b600060405180830381600087803b1580156114dd57600080fd5b505af11580156114f1573d6000803e3d6000fd5b509298975050505050505050565b60008061150a610f4d565b9050611514611992565b61151c610727565b81526000602082018190526040820152611534610efc565b6001600160a01b0316606082015234608082015260408051602081019091526000815260a082015261158660408051608081018252600080825260208201819052918101829052606081019190915290565b308082526000602083018190526040808401929092526060830181905290516352bbbe2960e01b81526001600160a01b038516916352bbbe299134916115d491879187914290600401611c0d565b60206040518083038185885af11580156115f2573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906116179190611b47565b935050505090565b6040516001600160a01b03831660248201526044810182905261164f90849063a9059cbb60e01b906064016112a9565b505050565b600061165e6107e5565b6001600160a01b03166321f8a721836040518263ffffffff1660e01b815260040161168b91815260200190565b602060405180830381865afa1580156116a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d859190611ceb565b60006116d6610bbf565b6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561171057600080fd5b505af1158015611724573d6000803e3d6000fd5b50505050506000905090565b6000611785826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118029092919063ffffffff16565b80519091501561164f57808060200190518101906117a39190611b25565b61164f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161062a565b60606118118484600085611819565b949350505050565b60608247101561187a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161062a565b600080866001600160a01b031685876040516118969190611d14565b60006040518083038185875af1925050503d80600081146118d3576040519150601f19603f3d011682016040523d82523d6000602084013e6118d8565b606091505b50915091506118e9878383876118f4565b979650505050505050565b6060831561196357825160000361195c576001600160a01b0385163b61195c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161062a565b5081611811565b61181183838151156119785781518083602001fd5b8060405162461bcd60e51b815260040161062a9190611a44565b6040805160c0810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081525090565b6000602082840312156119ed57600080fd5b5035919050565b60005b83811015611a0f5781810151838201526020016119f7565b50506000910152565b60008151808452611a308160208601602086016119f4565b601f01601f19169290920160200192915050565b602081526000611a576020830184611a18565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611a8657600080fd5b813567ffffffffffffffff80821115611a9e57600080fd5b818401915084601f830112611ab257600080fd5b813581811115611ac457611ac4611a5e565b604051601f8201601f19908116603f01168101908382118183101715611aec57611aec611a5e565b81604052828152876020848701011115611b0557600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215611b3757600080fd5b81518015158114611a5757600080fd5b600060208284031215611b5957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610d8557610d85611b60565b8082028115828204841417610d8557610d85611b60565b600082611bbd57634e487b7160e01b600052601260045260246000fd5b500490565b6f636f6e74726163742e6164647265737360801b815260008251611bed8160108501602087016119f4565b9190910160100192915050565b81810381811115610d8557610d85611b60565b60e08152845160e08201526000602086015160028110611c3d57634e487b7160e01b600052602160045260246000fd5b61010083015260408601516001600160a01b03166101208301526060860151611c726101408401826001600160a01b03169052565b50608086015161016083015260a086015160c0610180840152611c996101a0840182611a18565b915050611cd9602083018680516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60a082019390935260c0015292915050565b600060208284031215611cfd57600080fd5b81516001600160a01b0381168114611a5757600080fd5b60008251611d268184602087016119f4565b919091019291505056fea164736f6c6343000811000a";

type RocketPoolAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RocketPoolAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RocketPoolAdaptor__factory extends ContractFactory {
  constructor(...args: RocketPoolAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RocketPoolAdaptor> {
    return super.deploy(overrides || {}) as Promise<RocketPoolAdaptor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RocketPoolAdaptor {
    return super.attach(address) as RocketPoolAdaptor;
  }
  override connect(signer: Signer): RocketPoolAdaptor__factory {
    return super.connect(signer) as RocketPoolAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RocketPoolAdaptorInterface {
    return new utils.Interface(_abi) as RocketPoolAdaptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RocketPoolAdaptor {
    return new Contract(address, _abi, signerOrProvider) as RocketPoolAdaptor;
  }
}
