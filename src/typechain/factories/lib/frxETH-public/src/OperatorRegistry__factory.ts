/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OperatorRegistry,
  OperatorRegistryInterface,
} from "../../../../lib/frxETH-public/src/OperatorRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_timelock_address",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_withdrawal_pubkey",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "KeysCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "timelock_address",
        type: "address",
      },
    ],
    name: "TimelockChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "withdrawalCredential",
        type: "bytes",
      },
    ],
    name: "ValidatorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ValidatorArrayCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remove_idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "dont_care_about_ordering",
        type: "bool",
      },
    ],
    name: "ValidatorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "times",
        type: "uint256",
      },
    ],
    name: "ValidatorsPopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "from_pubKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to_pubKey",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "from_idx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "to_idx",
        type: "uint256",
      },
    ],
    name: "ValidatorsSwapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "_withdrawalCredential",
        type: "bytes",
      },
    ],
    name: "WithdrawalCredentialSet",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "pubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "depositDataRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct OperatorRegistry.Validator",
        name: "validator",
        type: "tuple",
      },
    ],
    name: "addValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "pubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "depositDataRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct OperatorRegistry.Validator[]",
        name: "validatorArray",
        type: "tuple[]",
      },
    ],
    name: "addValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "clearValidatorArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "getValidator",
    outputs: [
      {
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "withdrawalCredentials",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "depositDataRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "depositDataRoot",
        type: "bytes32",
      },
    ],
    name: "getValidatorStruct",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "pubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "depositDataRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct OperatorRegistry.Validator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numValidators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "times",
        type: "uint256",
      },
    ],
    name: "popValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remove_idx",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dont_care_about_ordering",
        type: "bool",
      },
    ],
    name: "removeValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_timelock_address",
        type: "address",
      },
    ],
    name: "setTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_new_withdrawal_pubkey",
        type: "bytes",
      },
    ],
    name: "setWithdrawalCredential",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from_idx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to_idx",
        type: "uint256",
      },
    ],
    name: "swapValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock_address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f5e38038062001f5e83398101604081905262000034916200014e565b826001600160a01b038116620000905760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a150600480546001600160a01b0319166001600160a01b0384161790556003620001118282620002d7565b50505050620003a3565b80516001600160a01b03811681146200013357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200016457600080fd5b6200016f846200011b565b92506020620001808186016200011b565b60408601519093506001600160401b03808211156200019e57600080fd5b818701915087601f830112620001b357600080fd5b815181811115620001c857620001c862000138565b604051601f8201601f19908116603f01168101908382118183101715620001f357620001f362000138565b816040528281528a868487010111156200020c57600080fd5b600093505b8284101562000230578484018601518185018701529285019262000211565b60008684830101528096505050505050509250925092565b600181811c908216806200025d57607f821691505b6020821081036200027e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d257600081815260208120601f850160051c81016020861015620002ad5750805b601f850160051c820191505b81811015620002ce57828155600101620002b9565b5050505b505050565b81516001600160401b03811115620002f357620002f362000138565b6200030b8162000304845462000248565b8462000284565b602080601f8311600181146200034357600084156200032a5750858301515b600019600386901b1c1916600185901b178555620002ce565b600085815260208120601f198616915b82811015620003745788860151825594840194600190910190840162000353565b5085821015620003935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611bab80620003b36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a3f3498011610097578063bdacb30311610066578063bdacb30314610241578063dc6663c714610254578063e77df36614610267578063f63a17111461027a57600080fd5b8063a3f34980146101af578063ae6e83bf146101b7578063b5d89627146101ca578063bc9944f9146101ed57600080fd5b806353a47bb7116100d357806353a47bb7146101535780635d593f8d1461018357806379ba5097146101945780638da5cb5b1461019c57600080fd5b80631627540c1461010557806335b5d5341461011a5780633683c2041461012d5780634b9b90c514610140575b600080fd5b6101186101133660046112df565b61028d565b005b61011861012836600461130f565b610359565b61011861013b3660046113d4565b610743565b61011861014e366004611411565b61080e565b600154610166906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60025460405190815260200161017a565b6101186108cd565b600054610166906001600160a01b031681565b6101186109b7565b6101186101c536600461144c565b610a2d565b6101dd6101d836600461144c565b610b03565b60405161017a94939291906114ab565b6102346101fb3660046114f6565b60408051606080820183528082526020820152600091810191909152506040805160608101825293845260208401929092529082015290565b60405161017a9190611563565b61011861024f3660046112df565b610d11565b600454610166906001600160a01b031681565b6101186102753660046115b3565b610dec565b6101186102883660046115e8565b6111ae565b6000546001600160a01b031633146103045760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201526e37b936903a3434b99030b1ba34b7b760891b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b6004546001600160a01b031633148061037c57506000546001600160a01b031633145b6103985760405162461bcd60e51b81526004016102fb9061165d565b6000600283815481106103ad576103ad61168c565b90600052602060002090600302016040518060600160405290816000820180546103d6906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610402906116a2565b801561044f5780601f106104245761010080835404028352916020019161044f565b820191906000526020600020905b81548152906001019060200180831161043257829003601f168201915b50505050508152602001600182018054610468906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610494906116a2565b80156104e15780601f106104b6576101008083540402835291602001916104e1565b820191906000526020600020905b8154815290600101906020018083116104c457829003601f168201915b50505050508152602001600282015481525050905060006002838154811061050b5761050b61168c565b9060005260206000209060030201604051806060016040529081600082018054610534906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610560906116a2565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b505050505081526020016001820180546105c6906116a2565b80601f01602080910402602001604051908101604052809291908181526020018280546105f2906116a2565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b50505050508152602001600282015481525050905081600284815481106106685761066861168c565b6000918252602090912082516003909202019081906106879082611740565b506020820151600182019061069c9082611740565b506040820151816002015590505080600285815481106106be576106be61168c565b6000918252602090912082516003909202019081906106dd9082611740565b50602082015160018201906106f29082611740565b506040918201516002909101558251825191517f03f1d229173cc08c7c85f7dcd914724184489590489ed1d27b31afb310135061926107359291889088906117fa565b60405180910390a150505050565b6004546001600160a01b031633148061076657506000546001600160a01b031633145b6107825760405162461bcd60e51b81526004016102fb9061165d565b600254156107d25760405162461bcd60e51b815260206004820152601b60248201527f436c6561722076616c696461746f72206172726179206669727374000000000060448201526064016102fb565b60036107de8282611740565b507f8ba040512c1273086ac3dc9e59c32b9fc104064d6df4c3747fec10e029bc3fba8160405161034e9190611833565b6004546001600160a01b031633148061083157506000546001600160a01b031633145b61084d5760405162461bcd60e51b81526004016102fb9061165d565b6002805460018101825560009190915281906003027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0161088e828261194f565b507f56fee40578122d6872c25c03569653f7c3535363d7c04df91aa93806113b50c190506108bc8280611846565b600360405161034e93929190611a3c565b6001546001600160a01b031633146109455760405162461bcd60e51b815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527402063616e20616363657074206f776e65727368697605c1b60648201526084016102fb565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6004546001600160a01b03163314806109da57506000546001600160a01b031633145b6109f65760405162461bcd60e51b81526004016102fb9061165d565b610a0260026000611236565b6040517fbf5f94bdb8a562775e85a1990f734d669663e8de3b240d56ec4b1f71ca66b00790600090a1565b6004546001600160a01b0316331480610a5057506000546001600160a01b031633145b610a6c5760405162461bcd60e51b81526004016102fb9061165d565b60005b81811015610ad2576002805480610a8857610a88611af6565b60008281526020812060001990920191600383020190610aa8828261125a565b610ab660018301600061125a565b506000600291909101559055610acb81611b22565b9050610a6f565b506040518181527f03ed6e686bcf321d69427b429b8e18745c96afc0ba4e6c7eb1f3aefaff088cf39060200161034e565b606080606060008060028681548110610b1e57610b1e61168c565b9060005260206000209060030201604051806060016040529081600082018054610b47906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b73906116a2565b8015610bc05780601f10610b9557610100808354040283529160200191610bc0565b820191906000526020600020905b815481529060010190602001808311610ba357829003601f168201915b50505050508152602001600182018054610bd9906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c05906116a2565b8015610c525780601f10610c2757610100808354040283529160200191610c52565b820191906000526020600020905b815481529060010190602001808311610c3557829003601f168201915b5050505050815260200160028201548152505090508060000151945060038054610c7b906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca7906116a2565b8015610cf45780601f10610cc957610100808354040283529160200191610cf4565b820191906000526020600020905b815481529060010190602001808311610cd757829003601f168201915b505050505093508060200151925080604001519150509193509193565b6004546001600160a01b0316331480610d3457506000546001600160a01b031633145b610d505760405162461bcd60e51b81526004016102fb9061165d565b6001600160a01b038116610d9e5760405162461bcd60e51b815260206004820152601560248201527416995c9bc81859191c995cdcc819195d1958dd1959605a1b60448201526064016102fb565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527ff02fdf7b40fb25784d39342249bbb15cee2bc0288f75ded1cf8ad2e63d4d91aa9060200161034e565b6004546001600160a01b0316331480610e0f57506000546001600160a01b031633145b610e2b5760405162461bcd60e51b81526004016102fb9061165d565b600060028381548110610e4057610e4061168c565b90600052602060002090600302016000018054610e5c906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e88906116a2565b8015610ed55780601f10610eaa57610100808354040283529160200191610ed5565b820191906000526020600020905b815481529060010190602001808311610eb857829003601f168201915b505050505090508115610f4757600254610ef790849061012890600190611b3b565b6002805480610f0857610f08611af6565b60008281526020812060001990920191600383020190610f28828261125a565b610f3660018301600061125a565b60028201600090555050905561116e565b60006002805480602002602001604051908101604052809291908181526020016000905b828210156110cb5783829060005260206000209060030201604051806060016040529081600082018054610f9e906116a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610fca906116a2565b80156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b50505050508152602001600182018054611030906116a2565b80601f016020809104026020016040519081016040528092919081815260200182805461105c906116a2565b80156110a95780601f1061107e576101008083540402835291602001916110a9565b820191906000526020600020905b81548152906001019060200180831161108c57829003601f168201915b5050505050815260200160028201548152505081526020019060010190610f6b565b505050509050600260006110df9190611236565b60005b815181101561116b5784811461115b5760028282815181106111065761110661168c565b602090810291909101810151825460018101845560009384529190922082516003909202019081906111389082611740565b506020820151600182019061114d9082611740565b506040820151816002015550505b61116481611b22565b90506110e2565b50505b7f0d69d6651f1449a1038428f2773f275a39ef104c76bf46970cdffdbbe1496c518184846040516111a193929190611b54565b60405180910390a1505050565b6004546001600160a01b03163314806111d157506000546001600160a01b031633145b6111ed5760405162461bcd60e51b81526004016102fb9061165d565b8060005b818110156112305761122084848381811061120e5761120e61168c565b905060200281019061014e9190611b7e565b61122981611b22565b90506111f1565b50505050565b50805460008255600302906000526020600020908101906112579190611294565b50565b508054611266906116a2565b6000825580601f10611276575050565b601f01602090049060005260206000209081019061125791906112ca565b808211156112c65760006112a8828261125a565b6112b660018301600061125a565b5060006002820155600301611294565b5090565b5b808211156112c657600081556001016112cb565b6000602082840312156112f157600080fd5b81356001600160a01b038116811461130857600080fd5b9392505050565b6000806040838503121561132257600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261135857600080fd5b813567ffffffffffffffff8082111561137357611373611331565b604051601f8301601f19908116603f0116810190828211818310171561139b5761139b611331565b816040528381528660208588010111156113b457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156113e657600080fd5b813567ffffffffffffffff8111156113fd57600080fd5b61140984828501611347565b949350505050565b60006020828403121561142357600080fd5b813567ffffffffffffffff81111561143a57600080fd5b82016060818503121561130857600080fd5b60006020828403121561145e57600080fd5b5035919050565b6000815180845260005b8181101561148b5760208185018101518683018201520161146f565b506000602082860101526020601f19601f83011685010191505092915050565b6080815260006114be6080830187611465565b82810360208401526114d08187611465565b905082810360408401526114e48186611465565b91505082606083015295945050505050565b60008060006060848603121561150b57600080fd5b833567ffffffffffffffff8082111561152357600080fd5b61152f87838801611347565b9450602086013591508082111561154557600080fd5b5061155286828701611347565b925050604084013590509250925092565b60208152600082516060602084015261157f6080840182611465565b90506020840151601f1984830301604085015261159c8282611465565b915050604084015160608401528091505092915050565b600080604083850312156115c657600080fd5b82359150602083013580151581146115dd57600080fd5b809150509250929050565b600080602083850312156115fb57600080fd5b823567ffffffffffffffff8082111561161357600080fd5b818501915085601f83011261162757600080fd5b81358181111561163657600080fd5b8660208260051b850101111561164b57600080fd5b60209290920196919550909350505050565b6020808252601590820152744e6f74206f776e6572206f722074696d656c6f636b60581b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806116b657607f821691505b6020821081036116d657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561172657600081815260208120601f850160051c810160208610156117035750805b601f850160051c820191505b818110156117225782815560010161170f565b5050505b505050565b600019600383901b1c191660019190911b1790565b815167ffffffffffffffff81111561175a5761175a611331565b61176e8161176884546116a2565b846116dc565b602080601f83116001811461179d576000841561178b5750858301515b611795858261172b565b865550611722565b600085815260208120601f198616915b828110156117cc578886015182559484019460019091019084016117ad565b50858210156117ea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60808152600061180d6080830187611465565b828103602084015261181f8187611465565b604084019590955250506060015292915050565b6020815260006113086020830184611465565b6000808335601e1984360301811261185d57600080fd5b83018035915067ffffffffffffffff82111561187857600080fd5b60200191503681900382131561188d57600080fd5b9250929050565b67ffffffffffffffff8311156118ac576118ac611331565b6118c0836118ba83546116a2565b836116dc565b6000601f8411600181146118ee57600085156118dc5750838201355b6118e6868261172b565b845550611948565b600083815260209020601f19861690835b8281101561191f57868501358255602094850194600190920191016118ff565b508682101561193c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6119598283611846565b67ffffffffffffffff81111561197157611971611331565b6119858161197f85546116a2565b856116dc565b6000601f8211600181146119b357600083156119a15750838201355b6119ab848261172b565b865550611a0d565b600085815260209020601f19841690835b828110156119e457868501358255602094850194600190920191016119c4565b5084821015611a015760001960f88660031b161c19848701351681555b505060018360011b0185555b50505050611a1e6020830183611846565b611a2c818360018601611894565b5050604082013560028201555050565b60408152826040820152828460608301376000606084830101526000601f19601f850116820160206060848303018185015260008554611a7b816116a2565b8060608601526080600180841660008114611a9d5760018114611ab757611ae5565b60ff1985168884015283151560051b880183019550611ae5565b8a6000528660002060005b85811015611add5781548a8201860152908301908801611ac2565b890184019650505b50939b9a5050505050505050505050565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611b3457611b34611b0c565b5060010190565b81810381811115611b4e57611b4e611b0c565b92915050565b606081526000611b676060830186611465565b602083019490945250901515604090910152919050565b60008235605e19833603018112611b9457600080fd5b919091019291505056fea164736f6c6343000811000a";

type OperatorRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OperatorRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OperatorRegistry__factory extends ContractFactory {
  constructor(...args: OperatorRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _timelock_address: PromiseOrValue<string>,
    _withdrawal_pubkey: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OperatorRegistry> {
    return super.deploy(
      _owner,
      _timelock_address,
      _withdrawal_pubkey,
      overrides || {}
    ) as Promise<OperatorRegistry>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _timelock_address: PromiseOrValue<string>,
    _withdrawal_pubkey: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _timelock_address,
      _withdrawal_pubkey,
      overrides || {}
    );
  }
  override attach(address: string): OperatorRegistry {
    return super.attach(address) as OperatorRegistry;
  }
  override connect(signer: Signer): OperatorRegistry__factory {
    return super.connect(signer) as OperatorRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperatorRegistryInterface {
    return new utils.Interface(_abi) as OperatorRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OperatorRegistry {
    return new Contract(address, _abi, signerOrProvider) as OperatorRegistry;
  }
}
